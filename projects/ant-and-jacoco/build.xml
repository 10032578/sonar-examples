<?xml version="1.0" encoding="UTF-8"?>
<project name="Ant and JaCoCo" default="all" basedir="." xmlns:sonar="antlib:org.sonar.ant">

	<!-- ========= Define the main properties of this project ========= -->

	<property name="src.dir" value="src" />
	<property name="test.dir" value="test" />
	<property name="lib.junit.dir" value="lib" />
	<property name="build.dir" value="target" />
	<property name="classes.dir" value="${build.dir}/classes" />
	<property name="reports.dir" value="${build.dir}/reports" />
	<property name="reports.junit.xml.dir" value="${reports.dir}/junit" />

	<path id="classpath">
		<fileset dir="${lib.junit.dir}" includes="*.jar" />
	</path>


	<!-- ========= Define "regular" targets: clean, compile, tests, ... ========= -->

	<target name="clean" description="Remove all files created by the build/test process.">
		<delete dir="${build.dir}" />
		<delete dir="${reports.dir}" />
	</target>

	<target name="init">
		<mkdir dir="${build.dir}" />
		<mkdir dir="${classes.dir}" />
		<mkdir dir="${reports.dir}" />
		<mkdir dir="${reports.junit.xml.dir}" />
	</target>

	<target name="compile" depends="init">
		<javac srcdir="${src.dir}" destdir="${classes.dir}" classpathref="classpath" fork="true" debug="true" includeAntRuntime="false" />
		<javac srcdir="${test.dir}" destdir="${classes.dir}" classpathref="classpath" fork="true" debug="true" includeAntRuntime="false" />
	</target>


	<target name="run-tests" depends="compile">
		<taskdef name="junit" classname="org.apache.tools.ant.taskdefs.optional.junit.JUnitTask">
			<classpath>
				<path refid="classpath" />
			</classpath>
		</taskdef>

		<junit fork="yes" dir="${basedir}" failureProperty="test.failed">
			<classpath location="${classes.dir}" />
			<classpath refid="classpath" />

			<formatter type="xml" />
			<batchtest todir="${reports.junit.xml.dir}">
				<fileset dir="${test.dir}">
					<include name="**/*Test.java" />
				</fileset>
			</batchtest>
		</junit>
	</target>


	<!-- ========= Define Sonar target ========= -->

	<target name="sonar" depends="compile">
		<!-- Define the Sonar task -->
		<taskdef uri="antlib:org.sonar.ant" resource="org/sonar/ant/antlib.xml">
			<!-- Update the following line, or put the "sonar-ant-task-*.jar" file in your "$HOME/.ant/lib" folder -->
			<classpath path="path/to/sonar/ant/task/lib" />
		</taskdef>

		<property name="sonar.projectDescription" value="Example application using Ant and Jacoco" />
		<property name="sonar.sources" value="${src.dir}" />
		<property name="sonar.tests" value="${test.dir}" />
		<property name="sonar.binaries" value="${classes.dir}" />
		<property name="sonar.surefire.reportsPath" value="${reports.junit.xml.dir}" />

		<!-- The following properties are required to use Jacoco: -->
		<!-- 1. Tell Sonar that the coverage engine should be Jacoco -->
		<property name="sonar.core.codeCoveragePlugin" value="jacoco" />
		<!-- 2. Tell which "test" targets Jacoco should run -->
		<property name="sonar.jacoco.antTargets" value="run-tests" />

		<sonar:sonar key="ant-and-jacoco.example" version="0.1-SNAPSHOT" xmlns:sonar="antlib:org.sonar.ant" />
	</target>


	<!-- ========= The main target "all" ========= -->
	<!-- Note that depending on the "ru-tests" target is not mandatory, as Sonar Ant task will launch it thanks to the "sonar.jacoco.antTargets" property -->
	<!-- However, note that compiling is required before running the Sonar Ant task -->

	<target name="all" depends="clean,compile,sonar" description="Compile, run the tests and generate JUnit and coverage reports." />

</project>
